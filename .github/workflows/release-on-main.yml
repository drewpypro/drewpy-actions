name: Create Release On Main

on:
  push:
    branches:
      - main
    paths:
      - 'yaml-duplicate-validator/**'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Get next tag
        id: tag
        run: |
          # Find the latest v1.0.X tag, or start at v1.0.0
          last_tag=$(git tag --list 'v1.0.*' --sort=-v:refname | head -n 1)
          if [[ -z "$last_tag" ]]; then
            next_tag="v1.0.0"
          else
            major=$(echo "$last_tag" | cut -d. -f1 | tr -d 'v')
            minor=$(echo "$last_tag" | cut -d. -f2)
            patch=$(echo "$last_tag" | cut -d. -f3)
            patch=$((patch+1))
            next_tag="v${major}.${minor}.${patch}"
          fi
          echo "last_tag=$last_tag"
          echo "next_tag=$next_tag"
          echo "next_tag=$next_tag" >> $GITHUB_OUTPUT

      - name: Create new tag
        run: |
          git tag ${{ steps.tag.outputs.next_tag }}
          git push origin ${{ steps.tag.outputs.next_tag }}

      - name: Create GitHub release
        run: |
          gh release create "${{ steps.tag.outputs.next_tag }}" --generate-notes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
